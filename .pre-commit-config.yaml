repos:
    - repo: https://github.com/zakstucke/etcher
      rev: v0.0.23
      hooks:
          - id: etch

    - repo: https://github.com/pre-commit/mirrors-prettier
      rev: "v3.0.3"
      hooks:
          - id: prettier
            additional_dependencies:
                - "prettier@2.8.8"
                - "@trivago/prettier-plugin-sort-imports@4.3.0"
                - "prettier-plugin-tailwindcss@0.4.1"
            args:
                - --loglevel=warn
                - --config=./prettier/prettier.config.cjs
                - --ignore-path=./.prettierignore
                - --list-different
                - --write
                - "./**/*.{js,cjs,jsx,ts,tsx,json,yml,yaml}"

    # Spelling mistakes:
    - repo: https://github.com/codespell-project/codespell
      rev: v2.2.6
      hooks:
          - id: codespell
            # The codespell native exclude doesn't work, have to do it from pre-commit instead (https://github.com/codespell-project/codespell/issues/1498)
            exclude: >
                (?x)^(
                    .*\.lock|
                    .*\.pyc|
                    .*lock\.json|
                    .*rustfmt\.toml|
                )$
            args:
                # Ignore don't error on specific words that always fail: (foo,bar,baz...)
                - -L=crate

    # Toml formatting - haven't found one that's easily usable as pre-commit hook and vscode extension, so no vscode saving just using this:
    - repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks
      rev: v2.11.0
      hooks:
          - id: pretty-format-toml
            args: [--autofix, --trailing-commas, --no-sort, --indent=2]

    # Ruff: linting and formatting for python code:
    - repo: https://github.com/astral-sh/ruff-pre-commit
      rev: v0.1.5
      hooks:
          # Run the formatter.
          - id: ruff-format
            types_or: [python, pyi, jupyter]
            args: [--config=./py_rust/ruff.toml]
          # Run the linter.
          - id: ruff
            types_or: [python, pyi, jupyter]
            args: [--fix, --config=./py_rust/ruff.toml]

    # Cargo/clippy: linting and formatting for rust-backed python code:
    - repo: local
      hooks:
          - id: fmt
            name: fmt
            description: "Format files with cargo fmt. Have to use nightly as some format config used isn't stable"
            entry: cargo fmt
            language: rust
            types: [rust]
            args: [--manifest-path=./py_rust/Cargo.toml, --]
          - id: cargo-check
            name: cargo check
            description: Check the package for errors.
            entry: cargo check
            language: rust
            types: [rust]
            args: [--manifest-path=./py_rust/Cargo.toml, --all-features]
            pass_filenames: false
          - id: clippy
            name: clippy
            description: Lint rust sources
            entry: cargo clippy
            language: rust
            args:
                [
                    "--manifest-path",
                    "./py_rust/Cargo.toml",
                    "--all-features",
                    "--",
                    "-D",
                    "warnings",
                ]
            types: [rust]
            pass_filenames: false

    # Same as check-json from pre-commit, but with json5 support (so comments, trailing commas etc all pass)
    - repo: https://gitlab.com/bmares/check-json5
      rev: v1.0.0
      hooks:
          - id: check-json5
            exclude: ^.*\.etch\..*$

    - repo: https://github.com/pre-commit/pre-commit-hooks
      rev: v2.3.0
      hooks:
          - id: check-added-large-files
          - id: check-case-conflict
          - id: check-yaml
          - id: check-toml
          - id: trailing-whitespace
